

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Nov 23 17:53:23 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18   000000                     
    19                           ; Generated 17/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000FE0                     bsr             equ	4064
    54   000FE9                     fsr0            equ	4073
    55   000FEA                     fsr0h           equ	4074
    56   000FE9                     fsr0l           equ	4073
    57   000FE1                     fsr1            equ	4065
    58   000FE2                     fsr1h           equ	4066
    59   000FE1                     fsr1l           equ	4065
    60   000FD9                     fsr2            equ	4057
    61   000FDA                     fsr2h           equ	4058
    62   000FD9                     fsr2l           equ	4057
    63   000FEF                     indf0           equ	4079
    64   000FE7                     indf1           equ	4071
    65   000FDF                     indf2           equ	4063
    66   000FF2                     intcon          equ	4082
    67   000000                     nvmcon          equ	0
    68   000FF9                     pcl             equ	4089
    69   000FFA                     pclath          equ	4090
    70   000FFB                     pclatu          equ	4091
    71   000FEB                     plusw0          equ	4075
    72   000FE3                     plusw1          equ	4067
    73   000FDB                     plusw2          equ	4059
    74   000FED                     postdec0        equ	4077
    75   000FE5                     postdec1        equ	4069
    76   000FDD                     postdec2        equ	4061
    77   000FEE                     postinc0        equ	4078
    78   000FE6                     postinc1        equ	4070
    79   000FDE                     postinc2        equ	4062
    80   000FEC                     preinc0         equ	4076
    81   000FE4                     preinc1         equ	4068
    82   000FDC                     preinc2         equ	4060
    83   000FF3                     prod            equ	4083
    84   000FF4                     prodh           equ	4084
    85   000FF3                     prodl           equ	4083
    86   000FD8                     status          equ	4056
    87   000FF5                     tablat          equ	4085
    88   000FF6                     tblptr          equ	4086
    89   000FF7                     tblptrh         equ	4087
    90   000FF6                     tblptrl         equ	4086
    91   000FF8                     tblptru         equ	4088
    92   000FFD                     tosl            equ	4093
    93   000FE8                     wreg            equ	4072
    94   000F62                     SPPDATA         equ	3938	;# 
    95   000F63                     SPPCFG          equ	3939	;# 
    96   000F64                     SPPEPS          equ	3940	;# 
    97   000F65                     SPPCON          equ	3941	;# 
    98   000F66                     UFRM            equ	3942	;# 
    99   000F66                     UFRML           equ	3942	;# 
   100   000F67                     UFRMH           equ	3943	;# 
   101   000F68                     UIR             equ	3944	;# 
   102   000F69                     UIE             equ	3945	;# 
   103   000F6A                     UEIR            equ	3946	;# 
   104   000F6B                     UEIE            equ	3947	;# 
   105   000F6C                     USTAT           equ	3948	;# 
   106   000F6D                     UCON            equ	3949	;# 
   107   000F6E                     UADDR           equ	3950	;# 
   108   000F6F                     UCFG            equ	3951	;# 
   109   000F70                     UEP0            equ	3952	;# 
   110   000F71                     UEP1            equ	3953	;# 
   111   000F72                     UEP2            equ	3954	;# 
   112   000F73                     UEP3            equ	3955	;# 
   113   000F74                     UEP4            equ	3956	;# 
   114   000F75                     UEP5            equ	3957	;# 
   115   000F76                     UEP6            equ	3958	;# 
   116   000F77                     UEP7            equ	3959	;# 
   117   000F78                     UEP8            equ	3960	;# 
   118   000F79                     UEP9            equ	3961	;# 
   119   000F7A                     UEP10           equ	3962	;# 
   120   000F7B                     UEP11           equ	3963	;# 
   121   000F7C                     UEP12           equ	3964	;# 
   122   000F7D                     UEP13           equ	3965	;# 
   123   000F7E                     UEP14           equ	3966	;# 
   124   000F7F                     UEP15           equ	3967	;# 
   125   000F80                     PORTA           equ	3968	;# 
   126   000F81                     PORTB           equ	3969	;# 
   127   000F82                     PORTC           equ	3970	;# 
   128   000F83                     PORTD           equ	3971	;# 
   129   000F84                     PORTE           equ	3972	;# 
   130   000F89                     LATA            equ	3977	;# 
   131   000F8A                     LATB            equ	3978	;# 
   132   000F8B                     LATC            equ	3979	;# 
   133   000F8C                     LATD            equ	3980	;# 
   134   000F8D                     LATE            equ	3981	;# 
   135   000F92                     TRISA           equ	3986	;# 
   136   000F92                     DDRA            equ	3986	;# 
   137   000F93                     TRISB           equ	3987	;# 
   138   000F93                     DDRB            equ	3987	;# 
   139   000F94                     TRISC           equ	3988	;# 
   140   000F94                     DDRC            equ	3988	;# 
   141   000F95                     TRISD           equ	3989	;# 
   142   000F95                     DDRD            equ	3989	;# 
   143   000F96                     TRISE           equ	3990	;# 
   144   000F96                     DDRE            equ	3990	;# 
   145   000F9B                     OSCTUNE         equ	3995	;# 
   146   000F9D                     PIE1            equ	3997	;# 
   147   000F9E                     PIR1            equ	3998	;# 
   148   000F9F                     IPR1            equ	3999	;# 
   149   000FA0                     PIE2            equ	4000	;# 
   150   000FA1                     PIR2            equ	4001	;# 
   151   000FA2                     IPR2            equ	4002	;# 
   152   000FA6                     EECON1          equ	4006	;# 
   153   000FA7                     EECON2          equ	4007	;# 
   154   000FA8                     EEDATA          equ	4008	;# 
   155   000FA9                     EEADR           equ	4009	;# 
   156   000FAB                     RCSTA           equ	4011	;# 
   157   000FAB                     RCSTA1          equ	4011	;# 
   158   000FAC                     TXSTA           equ	4012	;# 
   159   000FAC                     TXSTA1          equ	4012	;# 
   160   000FAD                     TXREG           equ	4013	;# 
   161   000FAD                     TXREG1          equ	4013	;# 
   162   000FAE                     RCREG           equ	4014	;# 
   163   000FAE                     RCREG1          equ	4014	;# 
   164   000FAF                     SPBRG           equ	4015	;# 
   165   000FAF                     SPBRG1          equ	4015	;# 
   166   000FB0                     SPBRGH          equ	4016	;# 
   167   000FB1                     T3CON           equ	4017	;# 
   168   000FB2                     TMR3            equ	4018	;# 
   169   000FB2                     TMR3L           equ	4018	;# 
   170   000FB3                     TMR3H           equ	4019	;# 
   171   000FB4                     CMCON           equ	4020	;# 
   172   000FB5                     CVRCON          equ	4021	;# 
   173   000FB6                     ECCP1AS         equ	4022	;# 
   174   000FB6                     CCP1AS          equ	4022	;# 
   175   000FB7                     ECCP1DEL        equ	4023	;# 
   176   000FB7                     CCP1DEL         equ	4023	;# 
   177   000FB8                     BAUDCON         equ	4024	;# 
   178   000FB8                     BAUDCTL         equ	4024	;# 
   179   000FBA                     CCP2CON         equ	4026	;# 
   180   000FBB                     CCPR2           equ	4027	;# 
   181   000FBB                     CCPR2L          equ	4027	;# 
   182   000FBC                     CCPR2H          equ	4028	;# 
   183   000FBD                     CCP1CON         equ	4029	;# 
   184   000FBD                     ECCP1CON        equ	4029	;# 
   185   000FBE                     CCPR1           equ	4030	;# 
   186   000FBE                     CCPR1L          equ	4030	;# 
   187   000FBF                     CCPR1H          equ	4031	;# 
   188   000FC0                     ADCON2          equ	4032	;# 
   189   000FC1                     ADCON1          equ	4033	;# 
   190   000FC2                     ADCON0          equ	4034	;# 
   191   000FC3                     ADRES           equ	4035	;# 
   192   000FC3                     ADRESL          equ	4035	;# 
   193   000FC4                     ADRESH          equ	4036	;# 
   194   000FC5                     SSPCON2         equ	4037	;# 
   195   000FC6                     SSPCON1         equ	4038	;# 
   196   000FC7                     SSPSTAT         equ	4039	;# 
   197   000FC8                     SSPADD          equ	4040	;# 
   198   000FC9                     SSPBUF          equ	4041	;# 
   199   000FCA                     T2CON           equ	4042	;# 
   200   000FCB                     PR2             equ	4043	;# 
   201   000FCB                     MEMCON          equ	4043	;# 
   202   000FCC                     TMR2            equ	4044	;# 
   203   000FCD                     T1CON           equ	4045	;# 
   204   000FCE                     TMR1            equ	4046	;# 
   205   000FCE                     TMR1L           equ	4046	;# 
   206   000FCF                     TMR1H           equ	4047	;# 
   207   000FD0                     RCON            equ	4048	;# 
   208   000FD1                     WDTCON          equ	4049	;# 
   209   000FD2                     HLVDCON         equ	4050	;# 
   210   000FD2                     LVDCON          equ	4050	;# 
   211   000FD3                     OSCCON          equ	4051	;# 
   212   000FD5                     T0CON           equ	4053	;# 
   213   000FD6                     TMR0            equ	4054	;# 
   214   000FD6                     TMR0L           equ	4054	;# 
   215   000FD7                     TMR0H           equ	4055	;# 
   216   000FD8                     STATUS          equ	4056	;# 
   217   000FD9                     FSR2            equ	4057	;# 
   218   000FD9                     FSR2L           equ	4057	;# 
   219   000FDA                     FSR2H           equ	4058	;# 
   220   000FDB                     PLUSW2          equ	4059	;# 
   221   000FDC                     PREINC2         equ	4060	;# 
   222   000FDD                     POSTDEC2        equ	4061	;# 
   223   000FDE                     POSTINC2        equ	4062	;# 
   224   000FDF                     INDF2           equ	4063	;# 
   225   000FE0                     BSR             equ	4064	;# 
   226   000FE1                     FSR1            equ	4065	;# 
   227   000FE1                     FSR1L           equ	4065	;# 
   228   000FE2                     FSR1H           equ	4066	;# 
   229   000FE3                     PLUSW1          equ	4067	;# 
   230   000FE4                     PREINC1         equ	4068	;# 
   231   000FE5                     POSTDEC1        equ	4069	;# 
   232   000FE6                     POSTINC1        equ	4070	;# 
   233   000FE7                     INDF1           equ	4071	;# 
   234   000FE8                     WREG            equ	4072	;# 
   235   000FE9                     FSR0            equ	4073	;# 
   236   000FE9                     FSR0L           equ	4073	;# 
   237   000FEA                     FSR0H           equ	4074	;# 
   238   000FEB                     PLUSW0          equ	4075	;# 
   239   000FEC                     PREINC0         equ	4076	;# 
   240   000FED                     POSTDEC0        equ	4077	;# 
   241   000FEE                     POSTINC0        equ	4078	;# 
   242   000FEF                     INDF0           equ	4079	;# 
   243   000FF0                     INTCON3         equ	4080	;# 
   244   000FF1                     INTCON2         equ	4081	;# 
   245   000FF2                     INTCON          equ	4082	;# 
   246   000FF3                     PROD            equ	4083	;# 
   247   000FF3                     PRODL           equ	4083	;# 
   248   000FF4                     PRODH           equ	4084	;# 
   249   000FF5                     TABLAT          equ	4085	;# 
   250   000FF6                     TBLPTR          equ	4086	;# 
   251   000FF6                     TBLPTRL         equ	4086	;# 
   252   000FF7                     TBLPTRH         equ	4087	;# 
   253   000FF8                     TBLPTRU         equ	4088	;# 
   254   000FF9                     PCLAT           equ	4089	;# 
   255   000FF9                     PC              equ	4089	;# 
   256   000FF9                     PCL             equ	4089	;# 
   257   000FFA                     PCLATH          equ	4090	;# 
   258   000FFB                     PCLATU          equ	4091	;# 
   259   000FFC                     STKPTR          equ	4092	;# 
   260   000FFD                     TOS             equ	4093	;# 
   261   000FFD                     TOSL            equ	4093	;# 
   262   000FFE                     TOSH            equ	4094	;# 
   263   000FFF                     TOSU            equ	4095	;# 
   264   000F62                     SPPDATA         equ	3938	;# 
   265   000F63                     SPPCFG          equ	3939	;# 
   266   000F64                     SPPEPS          equ	3940	;# 
   267   000F65                     SPPCON          equ	3941	;# 
   268   000F66                     UFRM            equ	3942	;# 
   269   000F66                     UFRML           equ	3942	;# 
   270   000F67                     UFRMH           equ	3943	;# 
   271   000F68                     UIR             equ	3944	;# 
   272   000F69                     UIE             equ	3945	;# 
   273   000F6A                     UEIR            equ	3946	;# 
   274   000F6B                     UEIE            equ	3947	;# 
   275   000F6C                     USTAT           equ	3948	;# 
   276   000F6D                     UCON            equ	3949	;# 
   277   000F6E                     UADDR           equ	3950	;# 
   278   000F6F                     UCFG            equ	3951	;# 
   279   000F70                     UEP0            equ	3952	;# 
   280   000F71                     UEP1            equ	3953	;# 
   281   000F72                     UEP2            equ	3954	;# 
   282   000F73                     UEP3            equ	3955	;# 
   283   000F74                     UEP4            equ	3956	;# 
   284   000F75                     UEP5            equ	3957	;# 
   285   000F76                     UEP6            equ	3958	;# 
   286   000F77                     UEP7            equ	3959	;# 
   287   000F78                     UEP8            equ	3960	;# 
   288   000F79                     UEP9            equ	3961	;# 
   289   000F7A                     UEP10           equ	3962	;# 
   290   000F7B                     UEP11           equ	3963	;# 
   291   000F7C                     UEP12           equ	3964	;# 
   292   000F7D                     UEP13           equ	3965	;# 
   293   000F7E                     UEP14           equ	3966	;# 
   294   000F7F                     UEP15           equ	3967	;# 
   295   000F80                     PORTA           equ	3968	;# 
   296   000F81                     PORTB           equ	3969	;# 
   297   000F82                     PORTC           equ	3970	;# 
   298   000F83                     PORTD           equ	3971	;# 
   299   000F84                     PORTE           equ	3972	;# 
   300   000F89                     LATA            equ	3977	;# 
   301   000F8A                     LATB            equ	3978	;# 
   302   000F8B                     LATC            equ	3979	;# 
   303   000F8C                     LATD            equ	3980	;# 
   304   000F8D                     LATE            equ	3981	;# 
   305   000F92                     TRISA           equ	3986	;# 
   306   000F92                     DDRA            equ	3986	;# 
   307   000F93                     TRISB           equ	3987	;# 
   308   000F93                     DDRB            equ	3987	;# 
   309   000F94                     TRISC           equ	3988	;# 
   310   000F94                     DDRC            equ	3988	;# 
   311   000F95                     TRISD           equ	3989	;# 
   312   000F95                     DDRD            equ	3989	;# 
   313   000F96                     TRISE           equ	3990	;# 
   314   000F96                     DDRE            equ	3990	;# 
   315   000F9B                     OSCTUNE         equ	3995	;# 
   316   000F9D                     PIE1            equ	3997	;# 
   317   000F9E                     PIR1            equ	3998	;# 
   318   000F9F                     IPR1            equ	3999	;# 
   319   000FA0                     PIE2            equ	4000	;# 
   320   000FA1                     PIR2            equ	4001	;# 
   321   000FA2                     IPR2            equ	4002	;# 
   322   000FA6                     EECON1          equ	4006	;# 
   323   000FA7                     EECON2          equ	4007	;# 
   324   000FA8                     EEDATA          equ	4008	;# 
   325   000FA9                     EEADR           equ	4009	;# 
   326   000FAB                     RCSTA           equ	4011	;# 
   327   000FAB                     RCSTA1          equ	4011	;# 
   328   000FAC                     TXSTA           equ	4012	;# 
   329   000FAC                     TXSTA1          equ	4012	;# 
   330   000FAD                     TXREG           equ	4013	;# 
   331   000FAD                     TXREG1          equ	4013	;# 
   332   000FAE                     RCREG           equ	4014	;# 
   333   000FAE                     RCREG1          equ	4014	;# 
   334   000FAF                     SPBRG           equ	4015	;# 
   335   000FAF                     SPBRG1          equ	4015	;# 
   336   000FB0                     SPBRGH          equ	4016	;# 
   337   000FB1                     T3CON           equ	4017	;# 
   338   000FB2                     TMR3            equ	4018	;# 
   339   000FB2                     TMR3L           equ	4018	;# 
   340   000FB3                     TMR3H           equ	4019	;# 
   341   000FB4                     CMCON           equ	4020	;# 
   342   000FB5                     CVRCON          equ	4021	;# 
   343   000FB6                     ECCP1AS         equ	4022	;# 
   344   000FB6                     CCP1AS          equ	4022	;# 
   345   000FB7                     ECCP1DEL        equ	4023	;# 
   346   000FB7                     CCP1DEL         equ	4023	;# 
   347   000FB8                     BAUDCON         equ	4024	;# 
   348   000FB8                     BAUDCTL         equ	4024	;# 
   349   000FBA                     CCP2CON         equ	4026	;# 
   350   000FBB                     CCPR2           equ	4027	;# 
   351   000FBB                     CCPR2L          equ	4027	;# 
   352   000FBC                     CCPR2H          equ	4028	;# 
   353   000FBD                     CCP1CON         equ	4029	;# 
   354   000FBD                     ECCP1CON        equ	4029	;# 
   355   000FBE                     CCPR1           equ	4030	;# 
   356   000FBE                     CCPR1L          equ	4030	;# 
   357   000FBF                     CCPR1H          equ	4031	;# 
   358   000FC0                     ADCON2          equ	4032	;# 
   359   000FC1                     ADCON1          equ	4033	;# 
   360   000FC2                     ADCON0          equ	4034	;# 
   361   000FC3                     ADRES           equ	4035	;# 
   362   000FC3                     ADRESL          equ	4035	;# 
   363   000FC4                     ADRESH          equ	4036	;# 
   364   000FC5                     SSPCON2         equ	4037	;# 
   365   000FC6                     SSPCON1         equ	4038	;# 
   366   000FC7                     SSPSTAT         equ	4039	;# 
   367   000FC8                     SSPADD          equ	4040	;# 
   368   000FC9                     SSPBUF          equ	4041	;# 
   369   000FCA                     T2CON           equ	4042	;# 
   370   000FCB                     PR2             equ	4043	;# 
   371   000FCB                     MEMCON          equ	4043	;# 
   372   000FCC                     TMR2            equ	4044	;# 
   373   000FCD                     T1CON           equ	4045	;# 
   374   000FCE                     TMR1            equ	4046	;# 
   375   000FCE                     TMR1L           equ	4046	;# 
   376   000FCF                     TMR1H           equ	4047	;# 
   377   000FD0                     RCON            equ	4048	;# 
   378   000FD1                     WDTCON          equ	4049	;# 
   379   000FD2                     HLVDCON         equ	4050	;# 
   380   000FD2                     LVDCON          equ	4050	;# 
   381   000FD3                     OSCCON          equ	4051	;# 
   382   000FD5                     T0CON           equ	4053	;# 
   383   000FD6                     TMR0            equ	4054	;# 
   384   000FD6                     TMR0L           equ	4054	;# 
   385   000FD7                     TMR0H           equ	4055	;# 
   386   000FD8                     STATUS          equ	4056	;# 
   387   000FD9                     FSR2            equ	4057	;# 
   388   000FD9                     FSR2L           equ	4057	;# 
   389   000FDA                     FSR2H           equ	4058	;# 
   390   000FDB                     PLUSW2          equ	4059	;# 
   391   000FDC                     PREINC2         equ	4060	;# 
   392   000FDD                     POSTDEC2        equ	4061	;# 
   393   000FDE                     POSTINC2        equ	4062	;# 
   394   000FDF                     INDF2           equ	4063	;# 
   395   000FE0                     BSR             equ	4064	;# 
   396   000FE1                     FSR1            equ	4065	;# 
   397   000FE1                     FSR1L           equ	4065	;# 
   398   000FE2                     FSR1H           equ	4066	;# 
   399   000FE3                     PLUSW1          equ	4067	;# 
   400   000FE4                     PREINC1         equ	4068	;# 
   401   000FE5                     POSTDEC1        equ	4069	;# 
   402   000FE6                     POSTINC1        equ	4070	;# 
   403   000FE7                     INDF1           equ	4071	;# 
   404   000FE8                     WREG            equ	4072	;# 
   405   000FE9                     FSR0            equ	4073	;# 
   406   000FE9                     FSR0L           equ	4073	;# 
   407   000FEA                     FSR0H           equ	4074	;# 
   408   000FEB                     PLUSW0          equ	4075	;# 
   409   000FEC                     PREINC0         equ	4076	;# 
   410   000FED                     POSTDEC0        equ	4077	;# 
   411   000FEE                     POSTINC0        equ	4078	;# 
   412   000FEF                     INDF0           equ	4079	;# 
   413   000FF0                     INTCON3         equ	4080	;# 
   414   000FF1                     INTCON2         equ	4081	;# 
   415   000FF2                     INTCON          equ	4082	;# 
   416   000FF3                     PROD            equ	4083	;# 
   417   000FF3                     PRODL           equ	4083	;# 
   418   000FF4                     PRODH           equ	4084	;# 
   419   000FF5                     TABLAT          equ	4085	;# 
   420   000FF6                     TBLPTR          equ	4086	;# 
   421   000FF6                     TBLPTRL         equ	4086	;# 
   422   000FF7                     TBLPTRH         equ	4087	;# 
   423   000FF8                     TBLPTRU         equ	4088	;# 
   424   000FF9                     PCLAT           equ	4089	;# 
   425   000FF9                     PC              equ	4089	;# 
   426   000FF9                     PCL             equ	4089	;# 
   427   000FFA                     PCLATH          equ	4090	;# 
   428   000FFB                     PCLATU          equ	4091	;# 
   429   000FFC                     STKPTR          equ	4092	;# 
   430   000FFD                     TOS             equ	4093	;# 
   431   000FFD                     TOSL            equ	4093	;# 
   432   000FFE                     TOSH            equ	4094	;# 
   433   000FFF                     TOSU            equ	4095	;# 
   434   000F62                     SPPDATA         equ	3938	;# 
   435   000F63                     SPPCFG          equ	3939	;# 
   436   000F64                     SPPEPS          equ	3940	;# 
   437   000F65                     SPPCON          equ	3941	;# 
   438   000F66                     UFRM            equ	3942	;# 
   439   000F66                     UFRML           equ	3942	;# 
   440   000F67                     UFRMH           equ	3943	;# 
   441   000F68                     UIR             equ	3944	;# 
   442   000F69                     UIE             equ	3945	;# 
   443   000F6A                     UEIR            equ	3946	;# 
   444   000F6B                     UEIE            equ	3947	;# 
   445   000F6C                     USTAT           equ	3948	;# 
   446   000F6D                     UCON            equ	3949	;# 
   447   000F6E                     UADDR           equ	3950	;# 
   448   000F6F                     UCFG            equ	3951	;# 
   449   000F70                     UEP0            equ	3952	;# 
   450   000F71                     UEP1            equ	3953	;# 
   451   000F72                     UEP2            equ	3954	;# 
   452   000F73                     UEP3            equ	3955	;# 
   453   000F74                     UEP4            equ	3956	;# 
   454   000F75                     UEP5            equ	3957	;# 
   455   000F76                     UEP6            equ	3958	;# 
   456   000F77                     UEP7            equ	3959	;# 
   457   000F78                     UEP8            equ	3960	;# 
   458   000F79                     UEP9            equ	3961	;# 
   459   000F7A                     UEP10           equ	3962	;# 
   460   000F7B                     UEP11           equ	3963	;# 
   461   000F7C                     UEP12           equ	3964	;# 
   462   000F7D                     UEP13           equ	3965	;# 
   463   000F7E                     UEP14           equ	3966	;# 
   464   000F7F                     UEP15           equ	3967	;# 
   465   000F80                     PORTA           equ	3968	;# 
   466   000F81                     PORTB           equ	3969	;# 
   467   000F82                     PORTC           equ	3970	;# 
   468   000F83                     PORTD           equ	3971	;# 
   469   000F84                     PORTE           equ	3972	;# 
   470   000F89                     LATA            equ	3977	;# 
   471   000F8A                     LATB            equ	3978	;# 
   472   000F8B                     LATC            equ	3979	;# 
   473   000F8C                     LATD            equ	3980	;# 
   474   000F8D                     LATE            equ	3981	;# 
   475   000F92                     TRISA           equ	3986	;# 
   476   000F92                     DDRA            equ	3986	;# 
   477   000F93                     TRISB           equ	3987	;# 
   478   000F93                     DDRB            equ	3987	;# 
   479   000F94                     TRISC           equ	3988	;# 
   480   000F94                     DDRC            equ	3988	;# 
   481   000F95                     TRISD           equ	3989	;# 
   482   000F95                     DDRD            equ	3989	;# 
   483   000F96                     TRISE           equ	3990	;# 
   484   000F96                     DDRE            equ	3990	;# 
   485   000F9B                     OSCTUNE         equ	3995	;# 
   486   000F9D                     PIE1            equ	3997	;# 
   487   000F9E                     PIR1            equ	3998	;# 
   488   000F9F                     IPR1            equ	3999	;# 
   489   000FA0                     PIE2            equ	4000	;# 
   490   000FA1                     PIR2            equ	4001	;# 
   491   000FA2                     IPR2            equ	4002	;# 
   492   000FA6                     EECON1          equ	4006	;# 
   493   000FA7                     EECON2          equ	4007	;# 
   494   000FA8                     EEDATA          equ	4008	;# 
   495   000FA9                     EEADR           equ	4009	;# 
   496   000FAB                     RCSTA           equ	4011	;# 
   497   000FAB                     RCSTA1          equ	4011	;# 
   498   000FAC                     TXSTA           equ	4012	;# 
   499   000FAC                     TXSTA1          equ	4012	;# 
   500   000FAD                     TXREG           equ	4013	;# 
   501   000FAD                     TXREG1          equ	4013	;# 
   502   000FAE                     RCREG           equ	4014	;# 
   503   000FAE                     RCREG1          equ	4014	;# 
   504   000FAF                     SPBRG           equ	4015	;# 
   505   000FAF                     SPBRG1          equ	4015	;# 
   506   000FB0                     SPBRGH          equ	4016	;# 
   507   000FB1                     T3CON           equ	4017	;# 
   508   000FB2                     TMR3            equ	4018	;# 
   509   000FB2                     TMR3L           equ	4018	;# 
   510   000FB3                     TMR3H           equ	4019	;# 
   511   000FB4                     CMCON           equ	4020	;# 
   512   000FB5                     CVRCON          equ	4021	;# 
   513   000FB6                     ECCP1AS         equ	4022	;# 
   514   000FB6                     CCP1AS          equ	4022	;# 
   515   000FB7                     ECCP1DEL        equ	4023	;# 
   516   000FB7                     CCP1DEL         equ	4023	;# 
   517   000FB8                     BAUDCON         equ	4024	;# 
   518   000FB8                     BAUDCTL         equ	4024	;# 
   519   000FBA                     CCP2CON         equ	4026	;# 
   520   000FBB                     CCPR2           equ	4027	;# 
   521   000FBB                     CCPR2L          equ	4027	;# 
   522   000FBC                     CCPR2H          equ	4028	;# 
   523   000FBD                     CCP1CON         equ	4029	;# 
   524   000FBD                     ECCP1CON        equ	4029	;# 
   525   000FBE                     CCPR1           equ	4030	;# 
   526   000FBE                     CCPR1L          equ	4030	;# 
   527   000FBF                     CCPR1H          equ	4031	;# 
   528   000FC0                     ADCON2          equ	4032	;# 
   529   000FC1                     ADCON1          equ	4033	;# 
   530   000FC2                     ADCON0          equ	4034	;# 
   531   000FC3                     ADRES           equ	4035	;# 
   532   000FC3                     ADRESL          equ	4035	;# 
   533   000FC4                     ADRESH          equ	4036	;# 
   534   000FC5                     SSPCON2         equ	4037	;# 
   535   000FC6                     SSPCON1         equ	4038	;# 
   536   000FC7                     SSPSTAT         equ	4039	;# 
   537   000FC8                     SSPADD          equ	4040	;# 
   538   000FC9                     SSPBUF          equ	4041	;# 
   539   000FCA                     T2CON           equ	4042	;# 
   540   000FCB                     PR2             equ	4043	;# 
   541   000FCB                     MEMCON          equ	4043	;# 
   542   000FCC                     TMR2            equ	4044	;# 
   543   000FCD                     T1CON           equ	4045	;# 
   544   000FCE                     TMR1            equ	4046	;# 
   545   000FCE                     TMR1L           equ	4046	;# 
   546   000FCF                     TMR1H           equ	4047	;# 
   547   000FD0                     RCON            equ	4048	;# 
   548   000FD1                     WDTCON          equ	4049	;# 
   549   000FD2                     HLVDCON         equ	4050	;# 
   550   000FD2                     LVDCON          equ	4050	;# 
   551   000FD3                     OSCCON          equ	4051	;# 
   552   000FD5                     T0CON           equ	4053	;# 
   553   000FD6                     TMR0            equ	4054	;# 
   554   000FD6                     TMR0L           equ	4054	;# 
   555   000FD7                     TMR0H           equ	4055	;# 
   556   000FD8                     STATUS          equ	4056	;# 
   557   000FD9                     FSR2            equ	4057	;# 
   558   000FD9                     FSR2L           equ	4057	;# 
   559   000FDA                     FSR2H           equ	4058	;# 
   560   000FDB                     PLUSW2          equ	4059	;# 
   561   000FDC                     PREINC2         equ	4060	;# 
   562   000FDD                     POSTDEC2        equ	4061	;# 
   563   000FDE                     POSTINC2        equ	4062	;# 
   564   000FDF                     INDF2           equ	4063	;# 
   565   000FE0                     BSR             equ	4064	;# 
   566   000FE1                     FSR1            equ	4065	;# 
   567   000FE1                     FSR1L           equ	4065	;# 
   568   000FE2                     FSR1H           equ	4066	;# 
   569   000FE3                     PLUSW1          equ	4067	;# 
   570   000FE4                     PREINC1         equ	4068	;# 
   571   000FE5                     POSTDEC1        equ	4069	;# 
   572   000FE6                     POSTINC1        equ	4070	;# 
   573   000FE7                     INDF1           equ	4071	;# 
   574   000FE8                     WREG            equ	4072	;# 
   575   000FE9                     FSR0            equ	4073	;# 
   576   000FE9                     FSR0L           equ	4073	;# 
   577   000FEA                     FSR0H           equ	4074	;# 
   578   000FEB                     PLUSW0          equ	4075	;# 
   579   000FEC                     PREINC0         equ	4076	;# 
   580   000FED                     POSTDEC0        equ	4077	;# 
   581   000FEE                     POSTINC0        equ	4078	;# 
   582   000FEF                     INDF0           equ	4079	;# 
   583   000FF0                     INTCON3         equ	4080	;# 
   584   000FF1                     INTCON2         equ	4081	;# 
   585   000FF2                     INTCON          equ	4082	;# 
   586   000FF3                     PROD            equ	4083	;# 
   587   000FF3                     PRODL           equ	4083	;# 
   588   000FF4                     PRODH           equ	4084	;# 
   589   000FF5                     TABLAT          equ	4085	;# 
   590   000FF6                     TBLPTR          equ	4086	;# 
   591   000FF6                     TBLPTRL         equ	4086	;# 
   592   000FF7                     TBLPTRH         equ	4087	;# 
   593   000FF8                     TBLPTRU         equ	4088	;# 
   594   000FF9                     PCLAT           equ	4089	;# 
   595   000FF9                     PC              equ	4089	;# 
   596   000FF9                     PCL             equ	4089	;# 
   597   000FFA                     PCLATH          equ	4090	;# 
   598   000FFB                     PCLATU          equ	4091	;# 
   599   000FFC                     STKPTR          equ	4092	;# 
   600   000FFD                     TOS             equ	4093	;# 
   601   000FFD                     TOSL            equ	4093	;# 
   602   000FFE                     TOSH            equ	4094	;# 
   603   000FFF                     TOSU            equ	4095	;# 
   604   000F95                     _TRISD          set	3989
   605   000F83                     _PORTDbits      set	3971
   606   000F83                     _PORTD          set	3971
   607   000FC3                     _ADRESL         set	4035
   608   000FC4                     _ADRESH         set	4036
   609   000FC2                     _ADCON0bits     set	4034
   610   000FC0                     _ADCON2         set	4032
   611   000FC1                     _ADCON1         set	4033
   612   000F92                     _TRISA          set	3986
   613   000F81                     _PORTBbits      set	3969
   614   000F93                     _TRISBbits      set	3987
   615                           
   616                           	psect	smallconst
   617   000800                     __psmallconst:
   618                           	callstack 0
   619   000800  00                 	db	0
   620   000801                     STR_1:
   621   000801  20                 	db	32
   622   000802  20                 	db	32
   623   000803  20                 	db	32
   624   000804  20                 	db	32
   625   000805  20                 	db	32
   626   000806  20                 	db	32
   627   000807  20                 	db	32
   628   000808  20                 	db	32
   629   000809  20                 	db	32
   630   00080A  20                 	db	32
   631   00080B  20                 	db	32
   632   00080C  20                 	db	32
   633   00080D  20                 	db	32
   634   00080E  20                 	db	32
   635   00080F  20                 	db	32
   636   000810  20                 	db	32
   637   000811  00                 	db	0
   638   000812                     STR_4:
   639   000812  36                 	db	54	;'6'
   640   000813  35                 	db	53	;'5'
   641   000814  34                 	db	52	;'4'
   642   000815  33                 	db	51	;'3'
   643   000816  32                 	db	50	;'2'
   644   000817  31                 	db	49	;'1'
   645   000818  30                 	db	48	;'0'
   646   000819  39                 	db	57	;'9'
   647   00081A  38                 	db	56	;'8'
   648   00081B  37                 	db	55	;'7'
   649   00081C  36                 	db	54	;'6'
   650   00081D  35                 	db	53	;'5'
   651   00081E  34                 	db	52	;'4'
   652   00081F  33                 	db	51	;'3'
   653   000820  32                 	db	50	;'2'
   654   000821  31                 	db	49	;'1'
   655   000822  00                 	db	0
   656   000823                     STR_2:
   657   000823  31                 	db	49	;'1'
   658   000824  32                 	db	50	;'2'
   659   000825  33                 	db	51	;'3'
   660   000826  34                 	db	52	;'4'
   661   000827  35                 	db	53	;'5'
   662   000828  36                 	db	54	;'6'
   663   000829  37                 	db	55	;'7'
   664   00082A  38                 	db	56	;'8'
   665   00082B  39                 	db	57	;'9'
   666   00082C  30                 	db	48	;'0'
   667   00082D  31                 	db	49	;'1'
   668   00082E  32                 	db	50	;'2'
   669   00082F  33                 	db	51	;'3'
   670   000830  34                 	db	52	;'4'
   671   000831  35                 	db	53	;'5'
   672   000832  36                 	db	54	;'6'
   673   000833  00                 	db	0
   674   000801                     STR_3           equ	STR_1
   675   000834  00                 	db	0	; dummy byte at the end
   676   000002                     __activetblptr  equ	2
   677                           
   678                           ; #config settings
   679                           
   680                           	psect	cinit
   681   000C14                     __pcinit:
   682                           	callstack 0
   683   000C14                     start_initialization:
   684                           	callstack 0
   685   000C14                     __initialization:
   686                           	callstack 0
   687   000C14                     end_of_initialization:
   688                           	callstack 0
   689   000C14                     __end_of__initialization:
   690                           	callstack 0
   691   000C14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   692   000C16  6EF8               	movwf	tblptru,c
   693   000C18  0100               	movlb	0
   694   000C1A  EFC8  F004         	goto	_main	;jump to C main() function
   695                           
   696                           	psect	cstackCOMRAM
   697   000001                     __pcstackCOMRAM:
   698                           	callstack 0
   699   000001                     ?___lwdiv:
   700                           	callstack 0
   701   000001                     ___lwdiv@dividend:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x0
   705   000001                     	ds	2
   706   000003                     ___lwdiv@divisor:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x2
   710   000003                     	ds	2
   711   000005                     ___lwdiv@quotient:
   712                           	callstack 0
   713   000005                     
   714                           ; 1 bytes @ 0x4
   715   000005                     	ds	2
   716   000007                     ___lwdiv@counter:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x6
   720   000007                     	ds	1
   721   000008                     ms_time@ms:
   722                           	callstack 0
   723   000008                     us_time@us:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x7
   727   000008                     	ds	2
   728   00000A                     ms_time@tms:
   729                           	callstack 0
   730   00000A                     us_time@tus:
   731                           	callstack 0
   732   00000A                     
   733                           ; 1 bytes @ 0x9
   734   00000A                     	ds	2
   735   00000C                     ms_time@sms:
   736                           	callstack 0
   737   00000C                     us_time@sus:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0xB
   741   00000C                     	ds	2
   742   00000E                     lcd_com@cmd:
   743                           	callstack 0
   744   00000E                     lcd_prtChar@dat:
   745                           	callstack 0
   746   00000E                     
   747                           ; 1 bytes @ 0xD
   748   00000E                     	ds	1
   749   00000F                     lcd_prtStr@col:
   750                           	callstack 0
   751   00000F                     
   752                           ; 1 bytes @ 0xE
   753   00000F                     	ds	1
   754   000010                     lcd_prtStr@str:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0xF
   758   000010                     	ds	2
   759   000012                     lcd_prtStr@row:
   760                           	callstack 0
   761   000012                     
   762                           ; 1 bytes @ 0x11
   763   000012                     	ds	1
   764   000013                     
   765                           ; 1 bytes @ 0x12
   766 ;;
   767 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   768 ;;
   769 ;; *************** function _main *****************
   770 ;; Defined at:
   771 ;;		line 12 in file "main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   785 ;;      Params:         0       0       0       0       0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels required when called: 4
   791 ;; This function calls:
   792 ;;		_lcd_ini
   793 ;;		_lcd_prtStr
   794 ;;		_us_time
   795 ;; This function is called by:
   796 ;;		Startup code after reset
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text0
   801   000990                     __ptext0:
   802                           	callstack 0
   803   000990                     _main:
   804                           	callstack 27
   805   000990                     
   806                           ;main.c: 14: lcd_ini();
   807   000990  ECDC  F005         	call	_lcd_ini	;wreg free
   808   000994                     
   809                           ;main.c: 15: TRISBbits.RB1 = 0;
   810   000994  9293               	bcf	147,1,c	;volatile
   811   000996                     l1270:
   812                           
   813                           ;main.c: 17: {;main.c: 18: lcd_prtStr(2,0,"                ");
   814   000996  0E00               	movlw	0
   815   000998  6E0F               	movwf	lcd_prtStr@col^0,c
   816   00099A  0E01               	movlw	low STR_1
   817   00099C  6E10               	movwf	lcd_prtStr@str^0,c
   818   00099E  5010               	movf	lcd_prtStr@str^0,w,c
   819   0009A0  A4D8               	btfss	status,2,c
   820   0009A2  0E08               	movlw	high __smallconst
   821   0009A4  6E11               	movwf	(lcd_prtStr@str+1)^0,c
   822   0009A6  0E02               	movlw	2
   823   0009A8  EC72  F004         	call	_lcd_prtStr
   824   0009AC                     
   825                           ;main.c: 19: lcd_prtStr(0,0,"1234567890123456");
   826   0009AC  0E00               	movlw	0
   827   0009AE  6E0F               	movwf	lcd_prtStr@col^0,c
   828   0009B0  0E23               	movlw	low STR_2
   829   0009B2  6E10               	movwf	lcd_prtStr@str^0,c
   830   0009B4  5010               	movf	lcd_prtStr@str^0,w,c
   831   0009B6  A4D8               	btfss	status,2,c
   832   0009B8  0E08               	movlw	high __smallconst
   833   0009BA  6E11               	movwf	(lcd_prtStr@str+1)^0,c
   834   0009BC  0E00               	movlw	0
   835   0009BE  EC72  F004         	call	_lcd_prtStr
   836   0009C2                     
   837                           ;main.c: 21: PORTBbits.RB1 = 1;
   838   0009C2  8281               	bsf	129,1,c	;volatile
   839                           
   840                           ;main.c: 22: us_time(10000);
   841   0009C4  0E27               	movlw	39
   842   0009C6  6E09               	movwf	(us_time@us+1)^0,c
   843   0009C8  0E10               	movlw	16
   844   0009CA  6E08               	movwf	us_time@us^0,c
   845   0009CC  ECAD  F005         	call	_us_time	;wreg free
   846   0009D0                     
   847                           ;main.c: 23: PORTBbits.RB1 = 0;
   848   0009D0  9281               	bcf	129,1,c	;volatile
   849   0009D2                     
   850                           ;main.c: 24: lcd_prtStr(0,0,"                ");
   851   0009D2  0E00               	movlw	0
   852   0009D4  6E0F               	movwf	lcd_prtStr@col^0,c
   853   0009D6  0E01               	movlw	low STR_1
   854   0009D8  6E10               	movwf	lcd_prtStr@str^0,c
   855   0009DA  5010               	movf	lcd_prtStr@str^0,w,c
   856   0009DC  A4D8               	btfss	status,2,c
   857   0009DE  0E08               	movlw	high __smallconst
   858   0009E0  6E11               	movwf	(lcd_prtStr@str+1)^0,c
   859   0009E2  0E00               	movlw	0
   860   0009E4  EC72  F004         	call	_lcd_prtStr
   861   0009E8                     
   862                           ;main.c: 25: lcd_prtStr(2,0,"6543210987654321");
   863   0009E8  0E00               	movlw	0
   864   0009EA  6E0F               	movwf	lcd_prtStr@col^0,c
   865   0009EC  0E12               	movlw	low STR_4
   866   0009EE  6E10               	movwf	lcd_prtStr@str^0,c
   867   0009F0  5010               	movf	lcd_prtStr@str^0,w,c
   868   0009F2  A4D8               	btfss	status,2,c
   869   0009F4  0E08               	movlw	high __smallconst
   870   0009F6  6E11               	movwf	(lcd_prtStr@str+1)^0,c
   871   0009F8  0E02               	movlw	2
   872   0009FA  EC72  F004         	call	_lcd_prtStr
   873                           
   874                           ;main.c: 26: us_time(10000);
   875   0009FE  0E27               	movlw	39
   876   000A00  6E09               	movwf	(us_time@us+1)^0,c
   877   000A02  0E10               	movlw	16
   878   000A04  6E08               	movwf	us_time@us^0,c
   879   000A06  ECAD  F005         	call	_us_time	;wreg free
   880   000A0A  EFCB  F004         	goto	l1270
   881   000A0E  EF00  F000         	goto	start
   882   000A12                     __end_of_main:
   883                           	callstack 0
   884                           
   885 ;; *************** function _lcd_prtStr *****************
   886 ;; Defined at:
   887 ;;		line 166 in file "lcd.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  row             1    wreg     const unsigned char 
   890 ;;  col             1   14[COMRAM] const unsigned char 
   891 ;;  str             2   15[COMRAM] PTR const unsigned char 
   892 ;;		 -> lcd_prtInt@str(5), STR_4(17), STR_3(17), STR_2(17), 
   893 ;;		 -> STR_1(17), 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  row             1   17[COMRAM] const unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   905 ;;      Params:         3       0       0       0       0       0       0       0       0
   906 ;;      Locals:         1       0       0       0       0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0
   908 ;;      Totals:         4       0       0       0       0       0       0       0       0
   909 ;;Total ram usage:        4 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 3
   912 ;; This function calls:
   913 ;;		_lcd_com
   914 ;;		_lcd_prtChar
   915 ;;		_us_time
   916 ;; This function is called by:
   917 ;;		_main
   918 ;;		_lcd_prtInt
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text1
   923   0008E4                     __ptext1:
   924                           	callstack 0
   925   0008E4                     _lcd_prtStr:
   926                           	callstack 27
   927                           
   928                           ;incstack = 0
   929                           ;lcd_prtStr@row stored from wreg
   930   0008E4  6E12               	movwf	lcd_prtStr@row^0,c
   931   0008E6                     
   932                           ;lcd.c: 169: if(row == 2)
   933   0008E6  0E02               	movlw	2
   934   0008E8  1812               	xorwf	lcd_prtStr@row^0,w,c
   935   0008EA  A4D8               	btfss	status,2,c
   936   0008EC  EF7A  F004         	goto	u261
   937   0008F0  EF7C  F004         	goto	u260
   938   0008F4                     u261:
   939   0008F4  EF82  F004         	goto	l1252
   940   0008F8                     u260:
   941   0008F8                     
   942                           ;lcd.c: 170: {;lcd.c: 171: lcd_com(192 + col);
   943   0008F8  500F               	movf	lcd_prtStr@col^0,w,c
   944   0008FA  0FC0               	addlw	192
   945   0008FC  EC1B  F004         	call	_lcd_com
   946                           
   947                           ;lcd.c: 172: }
   948   000900  EFAF  F004         	goto	l1264
   949   000904                     l1252:
   950                           
   951                           ;lcd.c: 173: else if(row == 1)
   952   000904  0412               	decf	lcd_prtStr@row^0,w,c
   953   000906  A4D8               	btfss	status,2,c
   954   000908  EF88  F004         	goto	u271
   955   00090C  EF8A  F004         	goto	u270
   956   000910                     u271:
   957   000910  EF90  F004         	goto	l1256
   958   000914                     u270:
   959   000914                     
   960                           ;lcd.c: 174: {;lcd.c: 175: lcd_com(128 + col);
   961   000914  500F               	movf	lcd_prtStr@col^0,w,c
   962   000916  0F80               	addlw	128
   963   000918  EC1B  F004         	call	_lcd_com
   964                           
   965                           ;lcd.c: 176: }
   966   00091C  EFAF  F004         	goto	l1264
   967   000920                     l1256:
   968                           
   969                           ;lcd.c: 177: else;lcd.c: 178: {;lcd.c: 179: lcd_com(0x80);
   970   000920  0E80               	movlw	128
   971   000922  EC1B  F004         	call	_lcd_com
   972   000926  EFAF  F004         	goto	l1264
   973   00092A                     l1258:
   974                           
   975                           ;lcd.c: 183: {;lcd.c: 184: us_time(200);
   976   00092A  0E00               	movlw	0
   977   00092C  6E09               	movwf	(us_time@us+1)^0,c
   978   00092E  0EC8               	movlw	200
   979   000930  6E08               	movwf	us_time@us^0,c
   980   000932  ECAD  F005         	call	_us_time	;wreg free
   981   000936                     
   982                           ;lcd.c: 185: lcd_prtChar(*str);
   983   000936  C010  FFF6         	movff	lcd_prtStr@str,tblptrl
   984   00093A  C011  FFF7         	movff	lcd_prtStr@str+1,tblptrh
   985   00093E  6AF8               	clrf	tblptru,c
   986   000940  0E07               	movlw	(high __ramtop+-1)
   987   000942  64F7               	cpfsgt	tblptrh,c
   988   000944  D003               	bra	u287
   989   000946  0008               	tblrd		*
   990   000948  50F5               	movf	tablat,w,c
   991   00094A  D005               	bra	u280
   992   00094C                     u287:
   993   00094C  CFF6 FFE9          	movff	tblptrl,fsr0l
   994   000950  CFF7 FFEA          	movff	tblptrh,fsr0h
   995   000954  50EF               	movf	indf0,w,c
   996   000956                     u280:
   997   000956  EC09  F005         	call	_lcd_prtChar
   998   00095A                     
   999                           ;lcd.c: 186: str++;
  1000   00095A  4A10               	infsnz	lcd_prtStr@str^0,f,c
  1001   00095C  2A11               	incf	(lcd_prtStr@str+1)^0,f,c
  1002   00095E                     l1264:
  1003   00095E  C010  FFF6         	movff	lcd_prtStr@str,tblptrl
  1004   000962  C011  FFF7         	movff	lcd_prtStr@str+1,tblptrh
  1005   000966  6AF8               	clrf	tblptru,c
  1006   000968  0E07               	movlw	(high __ramtop+-1)
  1007   00096A  64F7               	cpfsgt	tblptrh,c
  1008   00096C  D003               	bra	u297
  1009   00096E  0008               	tblrd		*
  1010   000970  50F5               	movf	tablat,w,c
  1011   000972  D005               	bra	u290
  1012   000974                     u297:
  1013   000974  CFF6 FFE9          	movff	tblptrl,fsr0l
  1014   000978  CFF7 FFEA          	movff	tblptrh,fsr0h
  1015   00097C  50EF               	movf	indf0,w,c
  1016   00097E                     u290:
  1017   00097E  0900               	iorlw	0
  1018   000980  A4D8               	btfss	status,2,c
  1019   000982  EFC5  F004         	goto	u301
  1020   000986  EFC7  F004         	goto	u300
  1021   00098A                     u301:
  1022   00098A  EF95  F004         	goto	l1258
  1023   00098E                     u300:
  1024   00098E  0012               	return		;funcret
  1025   000990                     __end_of_lcd_prtStr:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _lcd_prtChar *****************
  1029 ;; Defined at:
  1030 ;;		line 128 in file "lcd.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  dat             1    wreg     unsigned char 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  dat             1   13[COMRAM] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0
  1045 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1047 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1048 ;;Total ram usage:        1 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 2
  1051 ;; This function calls:
  1052 ;;		_us_time
  1053 ;; This function is called by:
  1054 ;;		_lcd_prtStr
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text2
  1059   000A12                     __ptext2:
  1060                           	callstack 0
  1061   000A12                     _lcd_prtChar:
  1062                           	callstack 27
  1063                           
  1064                           ;incstack = 0
  1065                           ;lcd_prtChar@dat stored from wreg
  1066   000A12  6E0E               	movwf	lcd_prtChar@dat^0,c
  1067   000A14                     
  1068                           ;lcd.c: 130: PORTD = 0xF0;
  1069   000A14  0EF0               	movlw	240
  1070   000A16  6E83               	movwf	131,c	;volatile
  1071   000A18                     
  1072                           ;lcd.c: 131: us_time(40);
  1073   000A18  0E00               	movlw	0
  1074   000A1A  6E09               	movwf	(us_time@us+1)^0,c
  1075   000A1C  0E28               	movlw	40
  1076   000A1E  6E08               	movwf	us_time@us^0,c
  1077   000A20  ECAD  F005         	call	_us_time	;wreg free
  1078   000A24                     
  1079                           ;lcd.c: 132: PORTD = (uint8_t)(PORTD & (dat & 0xF0));
  1080   000A24  500E               	movf	lcd_prtChar@dat^0,w,c
  1081   000A26  1483               	andwf	131,w,c	;volatile
  1082   000A28  0BF0               	andlw	240
  1083   000A2A  6E83               	movwf	131,c	;volatile
  1084   000A2C                     
  1085                           ;lcd.c: 133: us_time(40);
  1086   000A2C  0E00               	movlw	0
  1087   000A2E  6E09               	movwf	(us_time@us+1)^0,c
  1088   000A30  0E28               	movlw	40
  1089   000A32  6E08               	movwf	us_time@us^0,c
  1090   000A34  ECAD  F005         	call	_us_time	;wreg free
  1091   000A38                     
  1092                           ;lcd.c: 135: PORTDbits.RD2 = 0;
  1093   000A38  9483               	bcf	131,2,c	;volatile
  1094   000A3A                     
  1095                           ;lcd.c: 136: PORTDbits.RD1 = 1;
  1096   000A3A  8283               	bsf	131,1,c	;volatile
  1097   000A3C                     
  1098                           ;lcd.c: 137: PORTDbits.RD0 = 1;
  1099   000A3C  8083               	bsf	131,0,c	;volatile
  1100   000A3E                     
  1101                           ;lcd.c: 138: us_time(40);
  1102   000A3E  0E00               	movlw	0
  1103   000A40  6E09               	movwf	(us_time@us+1)^0,c
  1104   000A42  0E28               	movlw	40
  1105   000A44  6E08               	movwf	us_time@us^0,c
  1106   000A46  ECAD  F005         	call	_us_time	;wreg free
  1107   000A4A                     
  1108                           ;lcd.c: 139: PORTDbits.RD0 = 0;
  1109   000A4A  9083               	bcf	131,0,c	;volatile
  1110   000A4C                     
  1111                           ;lcd.c: 140: us_time(40);
  1112   000A4C  0E00               	movlw	0
  1113   000A4E  6E09               	movwf	(us_time@us+1)^0,c
  1114   000A50  0E28               	movlw	40
  1115   000A52  6E08               	movwf	us_time@us^0,c
  1116   000A54  ECAD  F005         	call	_us_time	;wreg free
  1117   000A58                     
  1118                           ;lcd.c: 142: PORTD = 0xF0;
  1119   000A58  0EF0               	movlw	240
  1120   000A5A  6E83               	movwf	131,c	;volatile
  1121   000A5C                     
  1122                           ;lcd.c: 143: PORTD = (uint8_t)(PORTD & ((dat << 4) & 0xF0));
  1123   000A5C  380E               	swapf	lcd_prtChar@dat^0,w,c
  1124   000A5E  0BF0               	andlw	240
  1125   000A60  1483               	andwf	131,w,c	;volatile
  1126   000A62  0BF0               	andlw	240
  1127   000A64  6E83               	movwf	131,c	;volatile
  1128   000A66                     
  1129                           ;lcd.c: 145: PORTDbits.RD2 = 0;
  1130   000A66  9483               	bcf	131,2,c	;volatile
  1131   000A68                     
  1132                           ;lcd.c: 146: PORTDbits.RD1 = 1;
  1133   000A68  8283               	bsf	131,1,c	;volatile
  1134   000A6A                     
  1135                           ;lcd.c: 147: PORTDbits.RD0 = 1;
  1136   000A6A  8083               	bsf	131,0,c	;volatile
  1137   000A6C                     
  1138                           ;lcd.c: 148: us_time(40);
  1139   000A6C  0E00               	movlw	0
  1140   000A6E  6E09               	movwf	(us_time@us+1)^0,c
  1141   000A70  0E28               	movlw	40
  1142   000A72  6E08               	movwf	us_time@us^0,c
  1143   000A74  ECAD  F005         	call	_us_time	;wreg free
  1144   000A78                     
  1145                           ;lcd.c: 149: PORTDbits.RD0 = 0;
  1146   000A78  9083               	bcf	131,0,c	;volatile
  1147   000A7A                     
  1148                           ;lcd.c: 150: us_time(40);
  1149   000A7A  0E00               	movlw	0
  1150   000A7C  6E09               	movwf	(us_time@us+1)^0,c
  1151   000A7E  0E28               	movlw	40
  1152   000A80  6E08               	movwf	us_time@us^0,c
  1153   000A82  ECAD  F005         	call	_us_time	;wreg free
  1154   000A86  0012               	return		;funcret
  1155   000A88                     __end_of_lcd_prtChar:
  1156                           	callstack 0
  1157                           
  1158 ;; *************** function _lcd_ini *****************
  1159 ;; Defined at:
  1160 ;;		line 91 in file "lcd.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; Hardware stack levels required when called: 3
  1181 ;; This function calls:
  1182 ;;		_lcd_com
  1183 ;;		_ms_time
  1184 ;;		_us_time
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text3
  1191   000BB8                     __ptext3:
  1192                           	callstack 0
  1193   000BB8                     _lcd_ini:
  1194                           	callstack 27
  1195   000BB8                     
  1196                           ;lcd.c: 93: ms_time(100);
  1197   000BB8  0E00               	movlw	0
  1198   000BBA  6E09               	movwf	(ms_time@ms+1)^0,c
  1199   000BBC  0E64               	movlw	100
  1200   000BBE  6E08               	movwf	ms_time@ms^0,c
  1201   000BC0  EC7E  F005         	call	_ms_time	;wreg free
  1202   000BC4                     
  1203                           ;lcd.c: 94: TRISD = 0x00;
  1204   000BC4  6A95               	clrf	149,c	;volatile
  1205   000BC6                     
  1206                           ;lcd.c: 95: PORTD = 0x80;
  1207   000BC6  0E80               	movlw	128
  1208   000BC8  6E83               	movwf	131,c	;volatile
  1209   000BCA                     
  1210                           ;lcd.c: 98: lcd_com(0x30);
  1211   000BCA  0E30               	movlw	48
  1212   000BCC  EC1B  F004         	call	_lcd_com
  1213   000BD0                     
  1214                           ;lcd.c: 99: ms_time(50);
  1215   000BD0  0E00               	movlw	0
  1216   000BD2  6E09               	movwf	(ms_time@ms+1)^0,c
  1217   000BD4  0E32               	movlw	50
  1218   000BD6  6E08               	movwf	ms_time@ms^0,c
  1219   000BD8  EC7E  F005         	call	_ms_time	;wreg free
  1220   000BDC                     
  1221                           ;lcd.c: 101: lcd_com(0x30);
  1222   000BDC  0E30               	movlw	48
  1223   000BDE  EC1B  F004         	call	_lcd_com
  1224   000BE2                     
  1225                           ;lcd.c: 102: us_time(300);
  1226   000BE2  0E01               	movlw	1
  1227   000BE4  6E09               	movwf	(us_time@us+1)^0,c
  1228   000BE6  0E2C               	movlw	44
  1229   000BE8  6E08               	movwf	us_time@us^0,c
  1230   000BEA  ECAD  F005         	call	_us_time	;wreg free
  1231   000BEE                     
  1232                           ;lcd.c: 104: lcd_com(0x30);
  1233   000BEE  0E30               	movlw	48
  1234   000BF0  EC1B  F004         	call	_lcd_com
  1235   000BF4                     
  1236                           ;lcd.c: 106: lcd_com(0x32);
  1237   000BF4  0E32               	movlw	50
  1238   000BF6  EC1B  F004         	call	_lcd_com
  1239   000BFA                     
  1240                           ;lcd.c: 108: lcd_com(0x2C);
  1241   000BFA  0E2C               	movlw	44
  1242   000BFC  EC1B  F004         	call	_lcd_com
  1243   000C00                     
  1244                           ;lcd.c: 110: lcd_com(0x06);
  1245   000C00  0E06               	movlw	6
  1246   000C02  EC1B  F004         	call	_lcd_com
  1247   000C06                     
  1248                           ;lcd.c: 112: lcd_com(0x0F);
  1249   000C06  0E0F               	movlw	15
  1250   000C08  EC1B  F004         	call	_lcd_com
  1251   000C0C                     
  1252                           ;lcd.c: 114: lcd_com(0x01);
  1253   000C0C  0E01               	movlw	1
  1254   000C0E  EC1B  F004         	call	_lcd_com
  1255   000C12  0012               	return		;funcret
  1256   000C14                     __end_of_lcd_ini:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _ms_time *****************
  1260 ;; Defined at:
  1261 ;;		line 257 in file "lcd.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  ms              2    7[COMRAM] unsigned int 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  sms             2   11[COMRAM] unsigned int 
  1266 ;;  tms             2    9[COMRAM] unsigned int 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1276 ;;      Params:         2       0       0       0       0       0       0       0       0
  1277 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1279 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1280 ;;Total ram usage:        6 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 1
  1283 ;; This function calls:
  1284 ;;		___lwdiv
  1285 ;; This function is called by:
  1286 ;;		_lcd_ini
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text4
  1291   000AFC                     __ptext4:
  1292                           	callstack 0
  1293   000AFC                     _ms_time:
  1294                           	callstack 28
  1295   000AFC                     
  1296                           ;lcd.c: 260: for(uint16_t tms=0; tms < ms/10; tms++)
  1297   000AFC  0E00               	movlw	0
  1298   000AFE  6E0B               	movwf	(ms_time@tms+1)^0,c
  1299   000B00  0E00               	movlw	0
  1300   000B02  6E0A               	movwf	ms_time@tms^0,c
  1301   000B04  EF97  F005         	goto	l1184
  1302   000B08                     l1172:
  1303                           
  1304                           ;lcd.c: 261: {;lcd.c: 262: for(uint16_t sms=0; sms < ((48000000/4)/1000); sms++);
  1305   000B08  0E00               	movlw	0
  1306   000B0A  6E0D               	movwf	(ms_time@sms+1)^0,c
  1307   000B0C  0E00               	movlw	0
  1308   000B0E  6E0C               	movwf	ms_time@sms^0,c
  1309   000B10                     l1178:
  1310   000B10  4A0C               	infsnz	ms_time@sms^0,f,c
  1311   000B12  2A0D               	incf	(ms_time@sms+1)^0,f,c
  1312   000B14  0EE0               	movlw	224
  1313   000B16  5C0C               	subwf	ms_time@sms^0,w,c
  1314   000B18  0E2E               	movlw	46
  1315   000B1A  580D               	subwfb	(ms_time@sms+1)^0,w,c
  1316   000B1C  A0D8               	btfss	status,0,c
  1317   000B1E  EF93  F005         	goto	u241
  1318   000B22  EF95  F005         	goto	u240
  1319   000B26                     u241:
  1320   000B26  EF88  F005         	goto	l1178
  1321   000B2A                     u240:
  1322   000B2A  4A0A               	infsnz	ms_time@tms^0,f,c
  1323   000B2C  2A0B               	incf	(ms_time@tms+1)^0,f,c
  1324   000B2E                     l1184:
  1325   000B2E  C008  F001         	movff	ms_time@ms,___lwdiv@dividend
  1326   000B32  C009  F002         	movff	ms_time@ms+1,___lwdiv@dividend+1
  1327   000B36  0E00               	movlw	0
  1328   000B38  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1329   000B3A  0E0A               	movlw	10
  1330   000B3C  6E03               	movwf	___lwdiv@divisor^0,c
  1331   000B3E  EC44  F005         	call	___lwdiv	;wreg free
  1332   000B42  5001               	movf	?___lwdiv^0,w,c
  1333   000B44  5C0A               	subwf	ms_time@tms^0,w,c
  1334   000B46  5002               	movf	(?___lwdiv+1)^0,w,c
  1335   000B48  580B               	subwfb	(ms_time@tms+1)^0,w,c
  1336   000B4A  A0D8               	btfss	status,0,c
  1337   000B4C  EFAA  F005         	goto	u251
  1338   000B50  EFAC  F005         	goto	u250
  1339   000B54                     u251:
  1340   000B54  EF84  F005         	goto	l1172
  1341   000B58                     u250:
  1342   000B58  0012               	return		;funcret
  1343   000B5A                     __end_of_ms_time:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _lcd_com *****************
  1347 ;; Defined at:
  1348 ;;		line 48 in file "lcd.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  cmd             1    wreg     unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  cmd             1   13[COMRAM] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1362 ;;      Params:         0       0       0       0       0       0       0       0       0
  1363 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1365 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1366 ;;Total ram usage:        1 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 2
  1369 ;; This function calls:
  1370 ;;		_us_time
  1371 ;; This function is called by:
  1372 ;;		_lcd_ini
  1373 ;;		_lcd_prtStr
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text5
  1378   000836                     __ptext5:
  1379                           	callstack 0
  1380   000836                     _lcd_com:
  1381                           	callstack 27
  1382                           
  1383                           ;incstack = 0
  1384                           ;lcd_com@cmd stored from wreg
  1385   000836  6E0E               	movwf	lcd_com@cmd^0,c
  1386   000838                     
  1387                           ;lcd.c: 50: PORTD = 0xF0;
  1388   000838  0EF0               	movlw	240
  1389   00083A  6E83               	movwf	131,c	;volatile
  1390   00083C                     
  1391                           ;lcd.c: 51: us_time(10);
  1392   00083C  0E00               	movlw	0
  1393   00083E  6E09               	movwf	(us_time@us+1)^0,c
  1394   000840  0E0A               	movlw	10
  1395   000842  6E08               	movwf	us_time@us^0,c
  1396   000844  ECAD  F005         	call	_us_time	;wreg free
  1397   000848                     
  1398                           ;lcd.c: 53: PORTD = (uint8_t)(PORTD & (cmd & 0xF0));
  1399   000848  500E               	movf	lcd_com@cmd^0,w,c
  1400   00084A  1483               	andwf	131,w,c	;volatile
  1401   00084C  0BF0               	andlw	240
  1402   00084E  6E83               	movwf	131,c	;volatile
  1403   000850                     
  1404                           ;lcd.c: 54: us_time(10);
  1405   000850  0E00               	movlw	0
  1406   000852  6E09               	movwf	(us_time@us+1)^0,c
  1407   000854  0E0A               	movlw	10
  1408   000856  6E08               	movwf	us_time@us^0,c
  1409   000858  ECAD  F005         	call	_us_time	;wreg free
  1410   00085C                     
  1411                           ;lcd.c: 56: PORTDbits.RD2 = 0;
  1412   00085C  9483               	bcf	131,2,c	;volatile
  1413   00085E                     
  1414                           ;lcd.c: 57: PORTDbits.RD1 = 0;
  1415   00085E  9283               	bcf	131,1,c	;volatile
  1416   000860                     
  1417                           ;lcd.c: 58: PORTDbits.RD0 = 1;
  1418   000860  8083               	bsf	131,0,c	;volatile
  1419   000862                     
  1420                           ;lcd.c: 59: us_time(10);
  1421   000862  0E00               	movlw	0
  1422   000864  6E09               	movwf	(us_time@us+1)^0,c
  1423   000866  0E0A               	movlw	10
  1424   000868  6E08               	movwf	us_time@us^0,c
  1425   00086A  ECAD  F005         	call	_us_time	;wreg free
  1426   00086E                     
  1427                           ;lcd.c: 61: PORTDbits.RD0 = 0;
  1428   00086E  9083               	bcf	131,0,c	;volatile
  1429   000870                     
  1430                           ;lcd.c: 62: us_time(10);
  1431   000870  0E00               	movlw	0
  1432   000872  6E09               	movwf	(us_time@us+1)^0,c
  1433   000874  0E0A               	movlw	10
  1434   000876  6E08               	movwf	us_time@us^0,c
  1435   000878  ECAD  F005         	call	_us_time	;wreg free
  1436   00087C                     
  1437                           ;lcd.c: 64: PORTD = 0xF0;
  1438   00087C  0EF0               	movlw	240
  1439   00087E  6E83               	movwf	131,c	;volatile
  1440   000880                     
  1441                           ;lcd.c: 65: PORTD = (uint8_t)(PORTD & ((cmd << 4) & 0xF0));
  1442   000880  380E               	swapf	lcd_com@cmd^0,w,c
  1443   000882  0BF0               	andlw	240
  1444   000884  1483               	andwf	131,w,c	;volatile
  1445   000886  0BF0               	andlw	240
  1446   000888  6E83               	movwf	131,c	;volatile
  1447   00088A                     
  1448                           ;lcd.c: 67: PORTDbits.RD2 = 0;
  1449   00088A  9483               	bcf	131,2,c	;volatile
  1450   00088C                     
  1451                           ;lcd.c: 68: PORTDbits.RD1 = 0;
  1452   00088C  9283               	bcf	131,1,c	;volatile
  1453   00088E                     
  1454                           ;lcd.c: 69: PORTDbits.RD0 = 1;
  1455   00088E  8083               	bsf	131,0,c	;volatile
  1456   000890                     
  1457                           ;lcd.c: 70: us_time(10);
  1458   000890  0E00               	movlw	0
  1459   000892  6E09               	movwf	(us_time@us+1)^0,c
  1460   000894  0E0A               	movlw	10
  1461   000896  6E08               	movwf	us_time@us^0,c
  1462   000898  ECAD  F005         	call	_us_time	;wreg free
  1463   00089C                     
  1464                           ;lcd.c: 72: PORTDbits.RD0 = 0;
  1465   00089C  9083               	bcf	131,0,c	;volatile
  1466   00089E                     
  1467                           ;lcd.c: 73: us_time(10);
  1468   00089E  0E00               	movlw	0
  1469   0008A0  6E09               	movwf	(us_time@us+1)^0,c
  1470   0008A2  0E0A               	movlw	10
  1471   0008A4  6E08               	movwf	us_time@us^0,c
  1472   0008A6  ECAD  F005         	call	_us_time	;wreg free
  1473   0008AA                     
  1474                           ;lcd.c: 75: if(cmd == 0x01) us_time(100);
  1475   0008AA  040E               	decf	lcd_com@cmd^0,w,c
  1476   0008AC  A4D8               	btfss	status,2,c
  1477   0008AE  EF5B  F004         	goto	u221
  1478   0008B2  EF5D  F004         	goto	u220
  1479   0008B6                     u221:
  1480   0008B6  EF63  F004         	goto	l1166
  1481   0008BA                     u220:
  1482   0008BA  0E00               	movlw	0
  1483   0008BC  6E09               	movwf	(us_time@us+1)^0,c
  1484   0008BE  0E64               	movlw	100
  1485   0008C0  6E08               	movwf	us_time@us^0,c
  1486   0008C2  ECAD  F005         	call	_us_time	;wreg free
  1487   0008C6                     l1166:
  1488                           
  1489                           ;lcd.c: 76: if(cmd == 0x00) us_time(100);
  1490   0008C6  500E               	movf	lcd_com@cmd^0,w,c
  1491   0008C8  A4D8               	btfss	status,2,c
  1492   0008CA  EF69  F004         	goto	u231
  1493   0008CE  EF6B  F004         	goto	u230
  1494   0008D2                     u231:
  1495   0008D2  EF71  F004         	goto	l59
  1496   0008D6                     u230:
  1497   0008D6  0E00               	movlw	0
  1498   0008D8  6E09               	movwf	(us_time@us+1)^0,c
  1499   0008DA  0E64               	movlw	100
  1500   0008DC  6E08               	movwf	us_time@us^0,c
  1501   0008DE  ECAD  F005         	call	_us_time	;wreg free
  1502   0008E2                     l59:
  1503   0008E2  0012               	return		;funcret
  1504   0008E4                     __end_of_lcd_com:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _us_time *****************
  1508 ;; Defined at:
  1509 ;;		line 274 in file "lcd.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  us              2    7[COMRAM] unsigned int 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  sus             2   11[COMRAM] unsigned int 
  1514 ;;  tus             2    9[COMRAM] unsigned int 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         2       0       0       0       0       0       0       0       0
  1525 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1527 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1528 ;;Total ram usage:        6 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 1
  1531 ;; This function calls:
  1532 ;;		___lwdiv
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;;		_lcd_com
  1536 ;;		_lcd_ini
  1537 ;;		_lcd_prtChar
  1538 ;;		_lcd_prtStr
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text6
  1543   000B5A                     __ptext6:
  1544                           	callstack 0
  1545   000B5A                     _us_time:
  1546                           	callstack 29
  1547   000B5A                     
  1548                           ;lcd.c: 276: for(uint16_t tus=0; tus < us/10; tus++)
  1549   000B5A  0E00               	movlw	0
  1550   000B5C  6E0B               	movwf	(us_time@tus+1)^0,c
  1551   000B5E  0E00               	movlw	0
  1552   000B60  6E0A               	movwf	us_time@tus^0,c
  1553   000B62  EFC6  F005         	goto	l1124
  1554   000B66                     l1112:
  1555                           
  1556                           ;lcd.c: 277: {;lcd.c: 278: for(uint16_t sus=0; sus < (48000000>>2)/1000000; sus++);
  1557   000B66  0E00               	movlw	0
  1558   000B68  6E0D               	movwf	(us_time@sus+1)^0,c
  1559   000B6A  0E00               	movlw	0
  1560   000B6C  6E0C               	movwf	us_time@sus^0,c
  1561   000B6E                     l1118:
  1562   000B6E  4A0C               	infsnz	us_time@sus^0,f,c
  1563   000B70  2A0D               	incf	(us_time@sus+1)^0,f,c
  1564   000B72  500D               	movf	(us_time@sus+1)^0,w,c
  1565   000B74  E109               	bnz	u200
  1566   000B76  0E0C               	movlw	12
  1567   000B78  5C0C               	subwf	us_time@sus^0,w,c
  1568   000B7A  A0D8               	btfss	status,0,c
  1569   000B7C  EFC2  F005         	goto	u201
  1570   000B80  EFC4  F005         	goto	u200
  1571   000B84                     u201:
  1572   000B84  EFB7  F005         	goto	l1118
  1573   000B88                     u200:
  1574   000B88  4A0A               	infsnz	us_time@tus^0,f,c
  1575   000B8A  2A0B               	incf	(us_time@tus+1)^0,f,c
  1576   000B8C                     l1124:
  1577   000B8C  C008  F001         	movff	us_time@us,___lwdiv@dividend
  1578   000B90  C009  F002         	movff	us_time@us+1,___lwdiv@dividend+1
  1579   000B94  0E00               	movlw	0
  1580   000B96  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1581   000B98  0E0A               	movlw	10
  1582   000B9A  6E03               	movwf	___lwdiv@divisor^0,c
  1583   000B9C  EC44  F005         	call	___lwdiv	;wreg free
  1584   000BA0  5001               	movf	?___lwdiv^0,w,c
  1585   000BA2  5C0A               	subwf	us_time@tus^0,w,c
  1586   000BA4  5002               	movf	(?___lwdiv+1)^0,w,c
  1587   000BA6  580B               	subwfb	(us_time@tus+1)^0,w,c
  1588   000BA8  A0D8               	btfss	status,0,c
  1589   000BAA  EFD9  F005         	goto	u211
  1590   000BAE  EFDB  F005         	goto	u210
  1591   000BB2                     u211:
  1592   000BB2  EFB3  F005         	goto	l1112
  1593   000BB6                     u210:
  1594   000BB6  0012               	return		;funcret
  1595   000BB8                     __end_of_us_time:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function ___lwdiv *****************
  1599 ;; Defined at:
  1600 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  dividend        2    0[COMRAM] unsigned int 
  1603 ;;  divisor         2    2[COMRAM] unsigned int 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  quotient        2    4[COMRAM] unsigned int 
  1606 ;;  counter         1    6[COMRAM] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  2    0[COMRAM] unsigned int 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1616 ;;      Params:         4       0       0       0       0       0       0       0       0
  1617 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1619 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1620 ;;Total ram usage:        7 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_ms_time
  1626 ;;		_us_time
  1627 ;;		_digit_counter
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text7
  1632   000A88                     __ptext7:
  1633                           	callstack 0
  1634   000A88                     ___lwdiv:
  1635                           	callstack 29
  1636   000A88  0E00               	movlw	0
  1637   000A8A  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1638   000A8C  0E00               	movlw	0
  1639   000A8E  6E05               	movwf	___lwdiv@quotient^0,c
  1640   000A90  5003               	movf	___lwdiv@divisor^0,w,c
  1641   000A92  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1642   000A94  B4D8               	btfsc	status,2,c
  1643   000A96  EF4F  F005         	goto	u171
  1644   000A9A  EF51  F005         	goto	u170
  1645   000A9E                     u171:
  1646   000A9E  EF79  F005         	goto	l582
  1647   000AA2                     u170:
  1648   000AA2  0E01               	movlw	1
  1649   000AA4  6E07               	movwf	___lwdiv@counter^0,c
  1650   000AA6  EF59  F005         	goto	l1096
  1651   000AAA                     l1094:
  1652   000AAA  90D8               	bcf	status,0,c
  1653   000AAC  3603               	rlcf	___lwdiv@divisor^0,f,c
  1654   000AAE  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1655   000AB0  2A07               	incf	___lwdiv@counter^0,f,c
  1656   000AB2                     l1096:
  1657   000AB2  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1658   000AB4  EF5E  F005         	goto	u181
  1659   000AB8  EF60  F005         	goto	u180
  1660   000ABC                     u181:
  1661   000ABC  EF55  F005         	goto	l1094
  1662   000AC0                     u180:
  1663   000AC0                     l1098:
  1664   000AC0  90D8               	bcf	status,0,c
  1665   000AC2  3605               	rlcf	___lwdiv@quotient^0,f,c
  1666   000AC4  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1667   000AC6  5003               	movf	___lwdiv@divisor^0,w,c
  1668   000AC8  5C01               	subwf	___lwdiv@dividend^0,w,c
  1669   000ACA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1670   000ACC  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1671   000ACE  A0D8               	btfss	status,0,c
  1672   000AD0  EF6C  F005         	goto	u191
  1673   000AD4  EF6E  F005         	goto	u190
  1674   000AD8                     u191:
  1675   000AD8  EF73  F005         	goto	l1106
  1676   000ADC                     u190:
  1677   000ADC  5003               	movf	___lwdiv@divisor^0,w,c
  1678   000ADE  5E01               	subwf	___lwdiv@dividend^0,f,c
  1679   000AE0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1680   000AE2  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1681   000AE4  8005               	bsf	___lwdiv@quotient^0,0,c
  1682   000AE6                     l1106:
  1683   000AE6  90D8               	bcf	status,0,c
  1684   000AE8  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1685   000AEA  3203               	rrcf	___lwdiv@divisor^0,f,c
  1686   000AEC  2E07               	decfsz	___lwdiv@counter^0,f,c
  1687   000AEE  EF60  F005         	goto	l1098
  1688   000AF2                     l582:
  1689   000AF2  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1690   000AF6  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1691   000AFA  0012               	return		;funcret
  1692   000AFC                     __end_of___lwdiv:
  1693                           	callstack 0
  1694                           
  1695                           	psect	rparam
  1696   000001                     ___rparam_used  equ	1
  1697   000000                     ___param_bank   equ	0
  1698   000000                     __Lparam        equ	__Lrparam
  1699   000000                     __Hparam        equ	__Hrparam
  1700                           tosu	equ	0xFFF
  1701                           tosh	equ	0xFFE
  1702                           tosl	equ	0xFFD
  1703                           stkptr	equ	0xFFC
  1704                           pclatu	equ	0xFFB
  1705                           pclath	equ	0xFFA
  1706                           pcl	equ	0xFF9
  1707                           tblptru	equ	0xFF8
  1708                           tblptrh	equ	0xFF7
  1709                           tblptrl	equ	0xFF6
  1710                           tablat	equ	0xFF5
  1711                           prodh	equ	0xFF4
  1712                           prodl	equ	0xFF3
  1713                           indf0	equ	0xFEF
  1714                           postinc0	equ	0xFEE
  1715                           postdec0	equ	0xFED
  1716                           preinc0	equ	0xFEC
  1717                           plusw0	equ	0xFEB
  1718                           fsr0h	equ	0xFEA
  1719                           fsr0l	equ	0xFE9
  1720                           wreg	equ	0xFE8
  1721                           indf1	equ	0xFE7
  1722                           postinc1	equ	0xFE6
  1723                           postdec1	equ	0xFE5
  1724                           preinc1	equ	0xFE4
  1725                           plusw1	equ	0xFE3
  1726                           fsr1h	equ	0xFE2
  1727                           fsr1l	equ	0xFE1
  1728                           bsr	equ	0xFE0
  1729                           indf2	equ	0xFDF
  1730                           postinc2	equ	0xFDE
  1731                           postdec2	equ	0xFDD
  1732                           preinc2	equ	0xFDC
  1733                           plusw2	equ	0xFDB
  1734                           fsr2h	equ	0xFDA
  1735                           fsr2l	equ	0xFD9
  1736                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_prtStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> lcd_prtInt@str(COMRAM[5]), STR_1(CODE[17]), STR_2(CODE[17]), STR_3(CODE[17]), 
		 -> STR_4(CODE[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> lcd_prtInt@str(COMRAM[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> lcd_prtInt@str(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_lcd_prtStr
    _lcd_prtStr->_lcd_com
    _lcd_prtStr->_lcd_prtChar
    _lcd_prtChar->_us_time
    _lcd_ini->_lcd_com
    _ms_time->___lwdiv
    _lcd_com->_us_time
    _us_time->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2377
                            _lcd_ini
                         _lcd_prtStr
                            _us_time
 ---------------------------------------------------------------------------------
 (1) _lcd_prtStr                                           4     1      3    1165
                                             14 COMRAM     4     1      3
                            _lcd_com
                        _lcd_prtChar
                            _us_time
 ---------------------------------------------------------------------------------
 (2) _lcd_prtChar                                          1     1      0     336
                                             13 COMRAM     1     1      0
                            _us_time
 ---------------------------------------------------------------------------------
 (1) _lcd_ini                                              0     0      0     934
                            _lcd_com
                            _ms_time
                            _us_time
 ---------------------------------------------------------------------------------
 (2) _ms_time                                              6     4      2     262
                                              7 COMRAM     6     4      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _lcd_com                                              1     1      0     394
                                             13 COMRAM     1     1      0
                            _us_time
 ---------------------------------------------------------------------------------
 (1) _us_time                                              6     4      2     278
                                              7 COMRAM     6     4      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     168
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_ini
     _lcd_com
       _us_time
         ___lwdiv
     _ms_time
       ___lwdiv
     _us_time
   _lcd_prtStr
     _lcd_com
     _lcd_prtChar
       _us_time
     _us_time
   _us_time

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBIGSFRlh         64      0       0      0.0%
BITBIGSFRh          61      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
COMRAM              95     18      18     18.9%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BIGRAM            2047      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      18      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Nov 23 17:53:23 2024

           ?_lcd_prtChar 0001                       l62 0C12                       l65 0A86  
                     l59 08E2                       l75 098E                       l92 0B58  
                    l100 0BB6                      l582 0AF2                      l589 0AFA  
                    u200 0B88                      u201 0B84                      u210 0BB6  
                    u211 0BB2                      u220 08BA                      u300 098E  
                    u221 08B6                      u301 098A                      u230 08D6  
                    u231 08D2                      u240 0B2A                      u241 0B26  
                    u170 0AA2                      u250 0B58                      u171 0A9E  
                    u251 0B54                      u180 0AC0                      u260 08F8  
                    u181 0ABC                      u261 08F4                      u190 0ADC  
                    u270 0914                      u191 0AD8                      u271 0910  
                    u280 0956                      u290 097E                      u287 094C  
                    u297 0974                     l1100 0AC6                     l1102 0ADC  
                   l1110 0B5A                     l1104 0AE4                     l1120 0B72  
                   l1112 0B66                     l1200 0A3E                     l1106 0AE6  
                   l1122 0B88                     l1130 0848                     l1210 0A66  
                   l1202 0A4A                     l1108 0AEC                     l1124 0B8C  
                   l1140 0862                     l1132 0850                     l1220 0A7A  
                   l1212 0A68                     l1204 0A4C                     l1118 0B6E  
                   l1150 088A                     l1142 086E                     l1134 085C  
                   l1126 0838                     l1230 0BD0                     l1222 0BB8  
                   l1214 0A6A                     l1206 0A58                     l1160 089E  
                   l1152 088C                     l1144 0870                     l1136 085E  
                   l1128 083C                     l1240 0BFA                     l1232 0BDC  
                   l1224 0BC4                     l1216 0A6C                     l1208 0A5C  
                   l1090 0A90                     l1162 08AA                     l1154 088E  
                   l1146 087C                     l1138 0860                     l1170 0AFC  
                   l1242 0C00                     l1234 0BE2                     l1226 0BC6  
                   l1218 0A78                     l1250 08F8                     l1092 0AA2  
                   l1164 08BA                     l1156 0890                     l1148 0880  
                   l1180 0B14                     l1172 0B08                     l1244 0C06  
                   l1236 0BEE                     l1228 0BCA                     l1260 0936  
                   l1252 0904                     l1094 0AAA                     l1166 08C6  
                   l1158 089C                     l1182 0B2A                     l1246 0C0C  
                   l1238 0BF4                     l1190 0A24                     l1262 095A  
                   l1254 0914                     l1270 0996                     l1096 0AB2  
                   l1088 0A88                     l1168 08D6                     l1184 0B2E  
                   l1192 0A2C                     l1256 0920                     l1264 095E  
                   l1248 08E6                     l1280 09E8                     l1272 09AC  
                   l1098 0AC0                     l1178 0B10                     l1194 0A38  
                   l1186 0A14                     l1258 092A                     l1274 09C2  
                   l1266 0990                     l1196 0A3A                     l1188 0A18  
                   l1276 09D0                     l1268 0994                     l1198 0A3C  
                   l1278 09D2                     STR_1 0801                     STR_2 0823  
                   STR_3 0801                     STR_4 0812                     _main 0990  
                   fsr0h 0FEA                     indf0 0FEF                     fsr0l 0FE9  
                   start 0000             ___param_bank 0000                    ?_main 0001  
        __end_of___lwdiv 0AFC                    _PORTD 0F83                    _TRISA 0F92  
                  _TRISD 0F95          __end_of_lcd_com 08E4          __end_of_lcd_ini 0C14  
        __end_of_ms_time 0B5A                    tablat 0FF5                    status 0FD8  
        __end_of_us_time 0BB8          __initialization 0C14             __end_of_main 0A12  
                 ??_main 0013            __activetblptr 0002                   _ADCON1 0FC1  
                 _ADCON2 0FC0                   _ADRESH 0FC4                   _ADRESL 0FC3  
          lcd_prtStr@col 000F            lcd_prtStr@row 0012            lcd_prtStr@str 0010  
              ??___lwdiv 0005                   isa$std 0001                ??_lcd_com 000E  
              ??_lcd_ini 000F             __mediumconst 0000                ??_ms_time 000A  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
              ??_us_time 000A               __accesstop 0060  __end_of__initialization 0C14  
          ___rparam_used 0001           __pcstackCOMRAM 0001           lcd_prtChar@dat 000E  
             _lcd_prtStr 08E4                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 0A88             __psmallconst 0800                  __pcinit 0C14  
                __ramtop 0800                  __ptext0 0990                  __ptext1 08E4  
                __ptext2 0A12                  __ptext3 0BB8                  __ptext4 0AFC  
                __ptext5 0836                  __ptext6 0B5A                  __ptext7 0A88  
                _lcd_com 0836                  _lcd_ini 0BB8                  _ms_time 0AFC  
                _us_time 0B5A     end_of_initialization 0C14            __Lmediumconst 0000  
              _PORTBbits 0F81                _PORTDbits 0F83                _TRISBbits 0F93  
            ?_lcd_prtStr 000F               lcd_com@cmd 000E            ??_lcd_prtChar 000E  
    start_initialization 0C14      __end_of_lcd_prtChar 0A88         ___lwdiv@dividend 0001  
               ?___lwdiv 0001               ms_time@sms 000C               ms_time@tms 000A  
               ?_lcd_com 0001                 ?_lcd_ini 0001              __smallconst 0800  
               ?_ms_time 0008         ___lwdiv@quotient 0005                 ?_us_time 0008  
            _lcd_prtChar 0A12               _ADCON0bits 0FC2             ??_lcd_prtStr 0012  
               __Hrparam 0000                 __Lrparam 0000       __end_of_lcd_prtStr 0990  
             us_time@sus 000C               us_time@tus 000A          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                ms_time@ms 0008                 isa$xinst 0000  
              us_time@us 0008  
